{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","cn","href","onClick","event","preventDefault","handleTabClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EACT,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAClBC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAQzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OAEI,oBACE,UAAQ,MACRF,UAAWG,IACT,CAAE,YAAcL,IAAQF,IAH5B,SAME,mBACEQ,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,SAACC,GACRA,EAAMC,iBAzBH,SAACT,GAClBJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAwBEU,CAAeV,IALnB,SAQGI,aASf,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYa,cC7CVhB,EAAmB,CAC9B,CAAEM,GAAI,QAASG,MAAO,QAASO,QAAS,eACxC,CAAEV,GAAI,QAASG,MAAO,QAASO,QAAS,eACxC,CAAEV,GAAI,QAASG,MAAO,QAASO,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOjB,EAAP,KAAsBkB,EAAtB,KAYA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SARU,WACZ,IAAMJ,EAAcH,EAAKI,MAAK,qBAAGE,KAAgBL,KAEjD,MAAM,mBAAN,cAA0BE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAaM,OAMlCA,KAGH,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAnBgB,SAACG,GACrBc,EAAiBd,EAAIC,WCdzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0202ce42.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { TabsType } from '../../types/TabsType';\n\ntype Props = {\n  tabs: TabsType[];\n  selectedTabId: string;\n  onTabSelected: (tab: TabsType) => void;\n};\n\nexport const Tabs: React.FC<Props>\n  = ({ tabs, selectedTabId, onTabSelected }) => {\n    const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n    const handleTabClick = (tab: TabsType) => {\n      if (selectedTabId !== tab.id) {\n        onTabSelected(tab);\n      }\n    };\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => {\n              const { id, title } = tab;\n\n              return (\n                (\n                  <li\n                    data-cy=\"Tab\"\n                    className={cn(\n                      { 'is-active': (tab === selectedTab) },\n                    )}\n                  >\n                    <a\n                      href={`#${id}`}\n                      data-cy=\"TabLink\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        handleTabClick(tab);\n                      }}\n                    >\n                      {title}\n                    </a>\n                  </li>\n                )\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabsType } from './types/TabsType';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs: TabsType[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tab: TabsType) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const title = () => {\n    const selectedTab = tabs.find(({ id }) => id === selectedTabId);\n\n    return `Selected tab is ${selectedTab?.title}`;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {title()}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}